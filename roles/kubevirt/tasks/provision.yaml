---
- name: Login As Super User
  command: "oc login -u {{ admin_user }} -p {{ admin_password }}"
  when: cluster=="openshift"
        and admin_user is defined
        and admin_password is defined

- name: Check if {{ namespace }} exists
  shell: kubectl get ns | grep -w {{ namespace }} | awk '{ print $1 }'
  register: ns

- name: Create {{ namespace }} namespace
  shell: kubectl create namespace {{ namespace }}
  when: ns.stdout != "{{ namespace }}"

- name: Add Privileged Policy
  command: "oc adm policy add-scc-to-user privileged -z {{ item }} -n {{ namespace }}"
  with_items:
    - kubevirt-privileged
    - kubevirt-controller
    - kubevirt-infra  # For KubeVirt v0.2.0
  when: cluster=="openshift"

- name: Add Hostmount-anyuid Policy
  command: "oc adm policy add-scc-to-user hostmount-anyuid -z kubevirt-infra -n {{ namespace }}"
  when: cluster=="openshift"

- name: Check for kubevirt.yaml template in {{ kubevirt_template_dir }}
  stat:
    path: "{{ kubevirt_template_dir }}/kubevirt.yaml"
  register: byo_template

- name: Use kubevirt.yaml template from {{ kubevirt_template_dir }}
  set_fact:
    template_version: "release"
  when: byo_template.stat.exists == True

- include_tasks: "{{ manifest_version }}.yaml"

- name: Create KubeVirt Resources
  command: "kubectl apply -f /tmp/{{ item }}.yaml"
  with_items:
    - "{{ dev_template_resources }}"
  when: template_version=="dev"

- name: Create KubeVirt Resources
  command: kubectl apply -f /tmp/kubevirt.yaml
  when: template_version=="release"
